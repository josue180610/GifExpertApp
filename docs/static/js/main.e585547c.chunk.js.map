{"version":3,"sources":["Components/AddCategory.js","Components/GifGridItem.js","Services/GridGifService.js","Components/GifGridCategory.js","hooks/useFetchGrid.js","GifExpertApp.js","index.js"],"names":["AddCategoryForm","props","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","setCategories","categories","type","name","className","placeholder","onChange","target","value","GifItemImage","url","src","alt","width","height","getGift","category","a","encodeURI","fetch","resp","json","data","img","map","m","id","title","images","downsized_medium","GridCategory","arrCategory","loading","state","setstate","useEffect","setTimeout","then","useFetchGrid","image","item","GifExpertApp","AddCategory","ReactDOM","render","document","getElementById"],"mappings":"qPAgCeA,EA9BS,SAACC,GAAW,IAAD,EAEKC,mBAAS,IAFd,mBAExBC,EAFwB,KAEZC,EAFY,KAgB/B,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,EAAMS,cAAN,CAAqBP,GAArB,mBAAmCF,EAAMU,cACzCP,EAAc,MAKlB,SACI,uBACAQ,KAAK,OACLC,KAAK,WACLC,UAAU,cACVC,YAAY,wBACZC,SAnBY,SAACV,GACjBF,EAAcE,EAAEW,OAAOC,QAmBnBA,MAAOf,OCXJgB,G,MAZM,SAAC,GAAY,IAAXC,EAAU,EAAVA,IACnB,OACI,qBAAKN,UAAU,gBAAf,SACI,qBAAKO,IAAKD,EAAKE,IAAI,OAAOC,MAAM,OAAOC,OAAO,a,+BCN7CC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbP,EADa,0FAC4EQ,UAAUF,GADtF,sBAEAG,MAAMT,GAFN,cAEbU,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAID,EAAKE,KACX,SAACC,GACG,MAAM,CACFC,GAAGD,EAAEC,GACLC,MAAMF,EAAEE,MACRjB,IAAKe,EAAEG,OAAOC,iBAAiBnB,QATxB,kBAehBa,GAfgB,4CAAH,sDCuCLO,EAlCS,SAAC,GAAmB,IAClCrC,EADiC,EAAjBsC,YACO,GADU,ECOf,SAAEf,GAAgB,IAAD,EACfxB,mBAAS,CAC/B8B,KAAK,GACLU,SAAQ,IAH6B,mBAClCC,EADkC,KAC3BC,EAD2B,KAmBzC,OAdAC,qBAAU,WACNC,YAAW,WACPrB,EAAQC,GAAUqB,MAAK,SAAAd,GACnBW,EAAS,CACLZ,KAAKC,EACLS,SAAQ,SAGjB,KACHE,EAAS,CACLZ,KAAK,GACLU,SAAQ,MAEb,CAAChB,IACGiB,EDnBuBK,CAAa7C,GAA/B8C,EAP2B,EAOhCjB,KAAYU,EAPoB,EAOpBA,QACnB,OACI,qCACA,iDAAiBvC,KAEbuC,GAAY,mBAAG5B,UAAU,mCAAb,+BAIhB,6BAEImC,EAAMf,KAAM,SAACgB,GAAD,OACZ,6BACI,qBAAMpC,UAAU,wDAAhB,SACA,gCACA,cAAC,EAAD,CAAeM,IAAK8B,EAAK9B,MACzB,mBAAGN,UAAU,aAAb,SAA2BoC,EAAKb,cAJ3Ba,EAAKd,aEOXe,EA5BM,WAAO,IAAD,EACYjD,mBAAS,CAAC,WAAW,YAAY,gBAD7C,mBAChBS,EADgB,KACLD,EADK,KAOvB,OACI,qCACA,8CACA,cAAC0C,EAAD,CAAa1C,cAAkBA,EAAgBC,WAAcA,IAC7D,uBAYA,cAAC,EAAD,CAAc8B,YAAe9B,QCtBrC0C,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.e585547c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddCategoryForm = (props) => {\r\n    \r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const handleValue = (e) => { \r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2) {\r\n            props.setCategories([inputValue,...props.categories])\r\n            setInputValue(\"\");   \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\" \r\n            name=\"category\" \r\n            className=\"input-value\"\r\n            placeholder=\"Ingresar categoria...\"\r\n            onChange={handleValue}\r\n            value={inputValue}\r\n            ></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCategoryForm;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport './GifGridItem.css'\r\nconst GifItemImage = ({url}) =>  { \r\n    return (\r\n        <div className=\"container-img\">\r\n            <img src={url} alt=\"gift\" width=\"100%\" height=\"100%\"></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifItemImage.propTypes = {\r\n    url:PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifItemImage;","export const getGift = async(category) => { \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=z8GEzcJeDj0gUYRWpLks9cTvl1kURpfO&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const img=data.map(\r\n        (m) => {\r\n            return{\r\n                id:m.id,\r\n                title:m.title,\r\n                url: m.images.downsized_medium.url\r\n            };\r\n            \r\n        }\r\n        \r\n    )\r\nreturn img;\r\n}","import React from 'react';\r\nimport GifItemImage from './GifGridItem';\r\nimport './GifGridCategory.scss'\r\nimport { useFetchGrid } from '../hooks/useFetchGrid';\r\n/* import { getGift } from '../Services/GridGifService';\r\n */const GridCategory = ({arrCategory}) => { \r\n    const inputValue=arrCategory[0];\r\n    /* const [image, setImage] = useState([]);\r\n    \r\n    useEffect(()=>{ \r\n       getGift(inputValue).then(img => setImage(img));\r\n    },[inputValue]) */\r\n    const {data:image, loading} = useFetchGrid(inputValue);\r\n    return (\r\n        <>\r\n        <h3>Categor√≠a : {inputValue}</h3>\r\n        {\r\n            loading && (<p className=\"animate__animated animate__flash\">Cargando datos...</p>)\r\n        }\r\n        \r\n        \r\n        <ol>\r\n        {\r\n            image.map ( (item) => (\r\n            <li key={item.id}>\r\n                <div  className=\"container-grid-item animate__animated animate__fadeIn\">\r\n                <div>   \r\n                <GifItemImage  url={item.url} />\r\n                <p className=\"card-title\">{item.title}</p>\r\n                </div>\r\n                \r\n            </div>\r\n            </li>     \r\n            ))\r\n        }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\nexport default GridCategory;","import { useEffect, useState } from \"react\"\r\nimport { getGift } from \"../Services/GridGifService\"\r\n\r\n\r\n// En el custom hooks podemos definir:\r\n/*\r\n1. useEffect\r\n2. setTimeout\r\n3. useState\r\n4. funciones.\r\n5. etc\r\n*/\r\nexport const useFetchGrid = ( category )  => { \r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n    useEffect(()=>{\r\n        setTimeout(() => {\r\n            getGift(category).then(img => {\r\n                setstate({ \r\n                    data:img,\r\n                    loading:false\r\n                })\r\n            }) \r\n        }, 3000);\r\n        setstate({\r\n            data:[],\r\n            loading:true\r\n        })\r\n    }, [category])\r\n    return state;\r\n}","import React , {useState} from 'react';\r\nimport AddCategory from './Components/AddCategory';\r\nimport GridCategory from './Components/GifGridCategory';\r\nconst GifExpertApp = () => { \r\n    const [categories,setCategories] = useState([\"One Puch\",\"Samurai X\",\"Dragon Ball\"]);\r\n    /* const handleAdd = () => {\r\n        setCategories([ \r\n            ...categories,\"Black Clover\"\r\n        ])\r\n    } */\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories = { setCategories } categories= { categories }/>\r\n        <hr></hr>\r\n        \r\n        {/* <button onClick={handleAdd}>+ Agregar</button> */}\r\n        {/* <ol>\r\n\r\n        {\r\n           categories.map((item)=>(\r\n               <li key={item}>{item}</li>\r\n           ))\r\n        }    \r\n        \r\n        </ol> */}\r\n        <GridCategory arrCategory = {categories} /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from '../src/GifExpertApp'\nReactDOM.render(\n    <GifExpertApp />\n,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}